generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int               @id @default(autoincrement())
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  name           String?
  email          String            @unique
  hashedPassword String?
  role           String
  log            Log[]
  sessions       Session[]
  tokens         Token[]
  enquries       UsersOnEnquires[]
}

model UsersOnEnquires {
  userId    Int
  enquiryId Int
  enquiry   Enquiry @relation(fields: [enquiryId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([userId, enquiryId])
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
  userId             Int?
  user               User?     @relation(fields: [userId], references: [id])
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String
  userId      Int
  user        User      @relation(fields: [userId], references: [id])

  @@unique([hashedToken, type])
}

model Enquiry {
  id                        Int                     @id @default(autoincrement())
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime                @updatedAt
  client_address            String
  client_email              String                  @unique
  client_name               String
  client_qccupation_type    ClientOccupationType
  client_service            ClientServiceType
  private_enquiry           Boolean
  client_mobile             BigInt
  loan_amount               BigInt
  enquiry_request           EnquiryRequestType      @default(PENDING)
  bank_queries              BankQuery[]
  case_status               CaseStatus[]
  documents                 Document[]
  logs                      Log[]
  project_report            ProjectReport[]
  sanction_and_disbursement SanctionDisbursment[]
  search_valuation_report   SearchValuationReport[]
  users                     UsersOnEnquires[]
  Teaser                    Teaser?
}

model File {
  id                    Int                     @id @default(autoincrement())
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  key                   String
  name                  String
  fileType              String                  @default("pdf")
  ProjectReport         ProjectReport[]
  SanctionDisbursment   SanctionDisbursment[]
  SearchValuationReport SearchValuationReport[]
  Document              Document?               @relation(fields: [documentId], references: [id])
  documentId            Int?
}

model Log {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  type      String
  name      String
  enquiryId Int?
  userId    Int?
  Enquiry   Enquiry? @relation(fields: [enquiryId], references: [id])
  User      User?    @relation(fields: [userId], references: [id])
}

model Document {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  client_name    String
  document_name  String
  remark         String?
  description    String?
  enquiryId      Int?
  status         StatusType @default(NOT_UPLOAD)
  Enquiry        Enquiry?   @relation(fields: [enquiryId], references: [id])
  file           File[]
  is_public_user Boolean    @default(false)
}

model ProjectReport {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  label     String
  status    StatusType @default(NOT_UPLOAD)
  remark    String?
  enquiryId Int?
  fileId    Int?
  Enquiry   Enquiry?   @relation(fields: [enquiryId], references: [id])
  file      File?      @relation(fields: [fileId], references: [id])
}

model CaseStatus {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  bank_name   String
  bank_code   String?
  final_login Boolean
  case_status String?
  remark      String?
  enquiryId   Int?
  bank_query  BankQuery? @relation(fields: [bankQueryId], references: [id])
  Enquiry     Enquiry?   @relation(fields: [enquiryId], references: [id])
  bankQueryId Int?       @unique
}

model SearchValuationReport {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  document  String
  enquiryId Int?
  status    StatusType @default(NOT_UPLOAD)
  fileId    Int?
  Enquiry   Enquiry?   @relation(fields: [enquiryId], references: [id])
  file      File?      @relation(fields: [fileId], references: [id])
}

model BankQuery {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  bank_query   String
  bank_code    String?
  our_response String
  remark       String?
  enquiryId    Int?
  status       StatusType  @default(NOT_UPLOAD)
  Enquiry      Enquiry?    @relation(fields: [enquiryId], references: [id])
  CaseStatus   CaseStatus?
}

model SanctionDisbursment {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  document          String
  client_name       String?
  date_of_sanction  DateTime?
  product           ClientServiceType?
  amount_sanctioned BigInt?
  bank_name         String?
  rate_of_interest  Decimal?
  tenure            String?
  remark            String?
  enquiryId         Int?
  status            StatusType         @default(NOT_UPLOAD)
  fileId            Int?
  Enquiry           Enquiry?           @relation(fields: [enquiryId], references: [id])
  file              File?              @relation(fields: [fileId], references: [id])
}

model ChannelPartner {
  id        Int                @id @default(autoincrement())
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  name      String
  email     String
  city      String
  request   EnquiryRequestType @default(PENDING)
  company   String
  phone     BigInt
}

model Teaser {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  data      Json     @default(dbgenerated("'{}'"))
  Enquiry   Enquiry? @relation(fields: [enquiryId], references: [id])
  enquiryId Int?     @unique
}

enum TokenType {
  RESET_PASSWORD
  INVITE_PASSWORD
}

enum EnquiryRequestType {
  PENDING
  APPROVED
  REJECTED
  SANCTIONED
}

enum StatusType {
  UPLOADED
  NOT_UPLOAD
}

enum ClientServiceType {
  HOME_LOAN
  MORTGAGE_LOAN
  UNSECURED_LOAN
  MSME_LOAN
  STARTUP_LOAN
  SUBSIDY_SCHEMES
}

enum ClientOccupationType {
  SALARIED_INDIVIDUAL
  INDIVIDUAL
  SELF_EMPLOYED_INDIVIDUAL_OR_PROPRIETORSHIP
  PARTNERSHIP
  COMPANY
}
